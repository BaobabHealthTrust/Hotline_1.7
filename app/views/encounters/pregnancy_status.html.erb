<script type="text/javascript" type="text/javascript" src="/assets/jquery.js"></script>
<script type="text/javascript" type="text/javascript" src="/assets/top-icon.js"></script>

<style type="text/css">
    /*============ */
    .btn-day {
        display: inline;
        margin: 5px 2px 2px;
        text-align: center;
        background-color: #5281E0;
        border: solid dodgerblue 3px;
        border-radius: 7px;
        box-shadow: 2px 2px 10px lightblue inset;
        color: white;
        font-size: 1.7em;
        line-height: 57px;
        min-width: 120px;
        font-weight: bold;
        min-height: 100px;
    }
    #tbInputDay {
        margin-top: 10px;
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border-color: -moz-use-text-color -moz-use-text-color silver;
        border-style: none none solid;
        border-width: medium medium 1px;
        font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
        font-size: 2.2em;
        padding-left: 5px;
        width: 99%;
        text-align: center;
    }
    .btn-year {
        display: inline;
        margin: 5px 2px 2px;
        text-align: center;
        background-color: #5281E0;
        border: solid dodgerblue 3px;
        border-radius: 7px;
        box-shadow: 2px 2px 10px lightblue inset;
        color: white;
        font-size: 1.7em;
        line-height: 57px;
        min-width: 120px;
        font-weight: bold;
        min-height: 100px;
    }
    .btn-red {
        display: inline;
        margin: 5px 2px 2px;
        text-align: center;
        background-color: red;
        color: white;
        font-size: 1.3em;
        line-height: 57px;
        min-width: 120px;
        font-weight: bold;
        min-height: 100px;
    }
    .btn-green {
        display: inline;
        margin: 5px 2px 2px;
        text-align: center;
        background-color: green;
        color: white;
        font-size: 1.3em;
        line-height: 57px;
        min-width: 120px;
        font-weight: bold;
        min-height: 100px;
    }
    #tbInputYear {
        margin-top: 10px;
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border-color: -moz-use-text-color -moz-use-text-color silver;
        border-style: none none solid;
        border-width: medium medium 1px;
        font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
        font-size: 2.2em;
        padding-left: 5px;
        width: 99%;
        text-align: center;
    }
    /* --------------------- popUp For Alert -----------------------*/
    .my_button {
        -moz-user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        font-weight: bolder;
        line-height: 1.82857;
        margin-bottom: 0;
        padding: 6px 56px;
        text-align: center;
        vertical-align: middle;
        white-space: nowrap;
        background-color: #337ab7;
        border-color: #2e6da4;
        color: #fff;
        float: right;
        margin-top: -5px;
    }
    .exit_button {
        -moz-user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        font-weight: bolder;
        line-height: 1.82857;
        margin-bottom: 0;
        padding: 0px 20px;
        text-align: center;
        vertical-align: middle;
        white-space: nowrap;
        background-color: #337ab7;
        border-color: #2e6da4;
        color: #fff;
        float: right;
        margin-top: -5px;
        top: 0%;
    }
    #popup-div {
        display: none;
        background-color: #F4F4F4;
        border: 2px solid #E0E0E0;
        border-radius: 15px;
        height: auto;
        padding: 5px;
        top: 0%;
        left: 0%;
        position: absolute;
        margin-top: 100px;
        width: 560px;
        margin-left: 430px;
        z-index: 991;
    }
    #popup-header{
        border-bottom: 2px solid #7D9EC0;
        margin-left: -5px;
        width: 101.5%;
        background-color: #FFFFFF;
        margin-top: -5px;
        padding-top: 5px;
        border-radius: 15px 15px 0 0;
        font-size: 14pt;
        font-weight: bolder;
    }
    #cover{
        display: none;
        position: absolute;
        background-color: black;
        width: 100%;
        height: 102%;
        left: 0%;
        top: 0%;
        z-index: 990;
        opacity: 0.65;
    }
    #no {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
    /* ------------------------------------------------------------------- */
    #flash {
        background-color: #ff2244;
        border-radius: 12px;
        border: 1px solid;
        height: 80px;
        text-align: center;
    }
    /**** Month ***/
    .month-table  {
        display: table;
        width: 100%;
        padding: 0px 1px 0px 1px;
    }
    .month-rows  {
        display: table-row;
    }
    .month-cells {
        display: table-cell;
        text-align: left;
        padding-left: 10px;
    }
    /**** Year ***/
    .year_id  {
        /* display: table; */
        width: 100%;
        padding: 0px 1px 0px 1px;
    }
    .month-options li {
        color: black;
        font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
        list-style: outside none none;
        margin-bottom: 5px;
        margin-top: 5px;
        padding-left: 5px;
        padding-right: 5px;
        font-size: 1.9em;
        line-height: 50px;
    }
    #tbInputMonth {
        margin-top: 10px;
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border-color: -moz-use-text-color -moz-use-text-color silver;
        border-style: none none solid;
        border-width: medium medium 1px;
        font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
        font-size: 2.2em;
        padding-left: 5px;
        width: 99%;
        text-align: center;
    }
    /*============ */
    .main-container {
        width:100%
    }
    body {
        -webkit-user-select: none;  /* Chrome all / Safari all */
        -moz-user-select: none;     /* Firefox all */
        -ms-user-select: none;      /* IE 10+ */
        user-select: none;          /* Likely future */
    }
    img {
        user-drag: none;
        user-select: none;
        -moz-user-select: none;
        -webkit-user-drag: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        pointer-events: none;
    }
    /* .................................. header starts ........................................................ */
    .table-container {
        width: 99%;
        display: table;
        padding: 0px 1px 0px 1px;
        border-style: solid;
        border-width: 0px 0px 1px 0px;
    }
    .table-row  {
        display: table-row;
        width: 100%;
    }
    .table-cell {
        display: table-cell;
    }
    .village-reach-icon {
        width: 80px;
        height: 80px;
        border-style: solid;
        border-width: 1px;
    }
    .confirm .village-reach-icon {
        border-width: 0px;
    }
    /*
    .confirm .table-cell {
      position: absolute;
      bottom: 7%;
    }*/
    /* .................................. header ends........................................................ */
    .btn-title {
        bottom: 30px;
        position: relative;
        padding-right: 15px;
    }
</style>
<!-- ======================================================================================== -->
<script>
    <% if params[:cancel_destination] == 'current_call' %>
        var tt_cancel_destination = "/patient/dashboard/<%= @patient_obj.patient_id %>/current_call";
    <% else %>
        var tt_cancel_destination = "/patient/dashboard/<%= @patient_obj.patient_id %>/tasks";
    <% end %>
</script>

<style>
    #num{
        display: none;
    }
    .title {
        font-size: 50px;
    }
    .data {
        font-size: 40px;
        color: orangered;
    }
</style>

<%#= render :partial => 'patient/birthdate/button_footer' %>

<%= form_tag("/encounters/create", id: "pregnancy-status", method: 'post', enctype: 'multipart/form-data') do %>
    <%= hidden_field_tag "encounter[encounter_type]", EncounterType.find_by_name("PREGNANCY STATUS").id %>
    <%= hidden_field_tag "encounter[patient_id]", @patient_obj.patient_id %>
    <%= hidden_field_tag "encounter[encounter_datetime]", (session_date || DateTime.now()).to_s(:db) %>
    <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

    <% @current_data = Encounter.current_data("PREGNANCY STATUS", @patient_obj.patient_id)%>

    <%= hidden_field_tag("observations[][concept_name]", "Pregnancy status") %>
    <%= select_tag "observations[][value_coded_or_text]", options_for_select(@pregnancy_options , @current_data['PREGNANCY STATUS']),
                   :helpText =>"Pregnancy status",
                   :tt_onLoad => "showHelpButton();setListAttributes();__$('keyboard').style.display = 'none';",
                   :tt_onUnLoad => "hideHelpButton();",
                   :id => "pregnancy_status",
                   :allowFreeText => false
    %>

    <input type = "hidden" id = "selected_year" />
    <input type = "hidden" id = "selected_month" />
    <input type = "hidden" id = "selected_day" />

    <!-- <input type = "hidden" id = "age_estimate" /> -->
    <!-- ======= for Pregnant, enter expected date of delivery ========= -->
    <%= hidden_field_tag("observations[][concept_name]", "Last menstrual period") %>
    <%= text_field_tag "observations[][value_datetime]", nil, { :tt_onLoad => "load();dateLayout(); __$('keyboard').style.display = 'none'; nextDate();",
                                                                :id => "last_menstrual_period",
                                                                :helpText => 'Last menstrual period (LMP)',
                                                                :condition => "$('pregnancy_status').value == 'Pregnant'",
                                                                :tt_pageStyleClass => "NoControls" } %>

    <%= hidden_field_tag("observations[][concept_name]", "Pregnancy due date") %>
    <%= hidden_field_tag "observations[][value_datetime]", nil, { :tt_onLoad => "load();dateLayout(); __$('keyboard').style.display = 'none'; nextDate();",
                                                                  :id => "expected_due_date",
                                                                  :condition => "$('tbInputYear').value == 'Unknown'",
                                                                  :tt_pageStyleClass => "NoControls" } %>

    <!-- ======= for Delivered, enter delivery date ========= -->
    <%= hidden_field_tag("observations[][concept_name]", "Delivery date") %>
    <%= text_field_tag "observations[][value_datetime]", nil, { :tt_onLoad => "load();dateLayout(); __$('keyboard').style.display = 'none'; nextDate();",
                                                                :helpText => 'Enter Delivery Date',
                                                                :id => 'delivery_date',
                                                                :condition => "$('pregnancy_status').value == 'Delivered'",
                                                                :tt_pageStyleClass => "NoControls" } %>

    <%unless @encounter_id.nil?%>
        <%= hidden_field_tag("encounter_id",  @encounter_id) %>
        <%= hidden_field_tag("editing",       true) %>
    <%end%>
<% end %>

<script>
    function nextDate() {
        var next_button = document.getElementById('nextButton');
        next_button.setAttribute('onmousedown','passDateValues(); validate_lmp();');
    }

    function passDateValues() {
        document.getElementById('selected_year').value = document.getElementById('tbInputYear').value;
        document.getElementById('selected_month').value = document.getElementById('tbInputMonth').value;
        document.getElementById('selected_day').value = document.getElementById('tbInputDay').value;
    }

    function inputDay(e) {
        var tbInput = document.getElementById('tbInputDay');
        if(tbInput.value == 'Unknown' && e.value != 'Unknown') {
            return;
        }
        if(e.value == 'Unknown') {
            tbInput.value = e.value;
        }else{
            tbInput.value = tbInput.value + e.value;
        }
    }

    function clearInputDay() {
        document.getElementById("tbInputDay").value = '';
    }

    function input(e) {
        var tbInput = document.getElementById('tbInputYear');
        if(tbInput.value == 'Unknown' && e.value != 'Unknown')
            return;
        if(e.value == 'Unknown') {
            tbInput.value = e.value;
        }else{
            tbInput.value = tbInput.value + e.value;
        }
    }

    function clearInputYear() {
        document.getElementById("tbInputYear").value = '';
    }

    function load() {
        var array = new Array();
        try {
            while (array.length < 10) {
                var temp = Math.round(Math.random() * 9);
                if (!contain(array, temp)) {
                    array.push(temp);
                }
            }
            for (var i = 0; i < 10; i++) {
                var btn = document.getElementById("btn" + i);
                btn.value = array[i];
            }
        }
        catch(e) {
        }
    }

    var get_edd;

    function changeToEDD() {
        showMessage('LMP Unknown. Enter estimated due date',false,false);
        dateLayout();
        document.getElementById('tbInputYear').value = '';
        document.getElementById('tbInputMonth').value = '';
        document.getElementById('tbInputDay').value = '';

        var helpText = document.getElementById('helpText'+tstCurrentPage);
        helpText.innerHTML = 'Estimated Due Date';

        get_edd = true;
    }

    function dateLayout() {
        var input_frame = $('inputFrame'+tstCurrentPage);
        $("clearButton").style.display = "none";
        var date_layout = document.createElement('div');
        //### ====== Create Table Layout for date add-on  ====== #############
        var table_container = document.createElement('div');
        table_container.className = 'table-container';
        table_container.style.height = '65%';
        table_container.style.borderWidth = '0px 0px 1px 0px';
        date_layout.appendChild(table_container);
        var table_row = document.createElement('div');
        table_row.className = 'table-row';
        table_container.appendChild(table_row);
        var year_table_cell = document.createElement('div');
        year_table_cell.className = 'table-cell';
        year_table_cell.style.width = '35%';
        year_table_cell.style.verticalAlign = 'top';
        year_table_cell.style.textAlign = 'center';
        table_row.appendChild(year_table_cell);
        // append year
        var label = document.createElement('label');
        label.innerHTML = 'Enter Year';
        year_table_cell.appendChild(label);
        var year_input_field = document.createElement('input');
        year_input_field.setAttribute('id','tbInputYear');
        year_input_field.setAttribute('value', "<%= @current_lmp_year %>");
        year_input_field.setAttribute('type','text');
        year_input_field.setAttribute('maxlength','4');
        year_table_cell.appendChild(year_input_field);
        var year_div = document.createElement('div');
        year_div.setAttribute('id','year_id');
        year_div.className = 'virtual-keypad';
        year_table_cell.appendChild(year_div);
        for(var j = 1; j <= 9; j++){
            var btn_id = 'btn'+j;
            btn = document.createElement('input');
            btn.setAttribute('id',btn_id);
            btn.setAttribute('type','button');
            btn.setAttribute('onclick','input(this);');
            btn.setAttribute('value',j);
            btn.className = 'btn-year';
            year_div.appendChild(btn);
            if ( j%3 == 0 ) {
                var line_break = document.createElement('br');
                year_div.appendChild(line_break);
            }
        }
        var btnUnknown = document.createElement('input');
        btnUnknown.setAttribute('id','btnUnknow');
        btnUnknown.setAttribute('type','button');
        btnUnknown.style.fontSize = '1.4em';
        btnUnknown.setAttribute('value','Unknown');
//        btnUnknown.setAttribute('onclick','input(this);');
        btnUnknown.className = 'btn-year';
        year_div.appendChild(btnUnknown);
        var btn0 = document.createElement('input');
        btn0.setAttribute('id','btn0');
        btn0.style.fontSize = '1.4em';
        btn0.setAttribute('type','button');
        btn0.setAttribute('onclick','input(this);');
        btn0.setAttribute('value','0');
        btn0.className = 'btn-year';
        year_div.appendChild(btn0);
        var clear_btn = document.createElement('input');
        clear_btn.setAttribute('id','btnCl');
        clear_btn.setAttribute('type','button');
        clear_btn.setAttribute('value','Clear');
        clear_btn.style.fontSize = '1.4em';
        clear_btn.setAttribute('onclick','clearInputYear();');
        clear_btn.className = 'btn-year';
        year_div.appendChild(clear_btn);
        var table_cell = document.createElement('div');
        table_cell.className = 'table-cell';
        table_cell.style.width = '30%';
        table_cell.style.verticalAlign = 'top';
        table_cell.style.textAlign = 'center';
        table_cell.style.borderStyle = 'solid';
        table_cell.style.borderWidth = '0px 1px 0px 1px';
        table_row.appendChild(table_cell);
        // append month
        var label = document.createElement('label');
        label.innerHTML = 'Select Month';
        table_cell.appendChild(label);
        var month_input_field = document.createElement('input');
        month_input_field.setAttribute('id','tbInputMonth');
        month_input_field.setAttribute('type','text');
        month_input_field.setAttribute('value', "<%= @current_lmp_month %>");
        table_cell.appendChild(month_input_field);
        var month_table = document.createElement('div');
        month_table.className = 'month-table';
        table_cell.appendChild(month_table);
        var month_rows = document.createElement('div');
        month_rows.className = 'month-rows';
        month_table.appendChild(month_rows);
        var month_cells = document.createElement('div');
        month_cells.className = 'month-cells';
        month_rows.appendChild(month_cells);
        var ul_options = document.createElement('ul');
        ul_options.className = 'month-options';
        ul_options.style.height = '99%';
        month_cells.appendChild(ul_options);
        <% months = []
            (1..6).each {|m| months << [Date::MONTHNAMES[m], m]} %>
        <% (months).each do |string,num| %>
        var li_options = document.createElement('li');
        li_options.className = 'cell-table';
        li_options.setAttribute('onclick','assignMonth(this)');
        li_options.setAttribute('id','<%= num %>');
        li_options.innerHTML = '<%= string %>';
        ul_options.appendChild(li_options);
        <% end %>
        var month_cells = document.createElement('div');
        month_cells.className = 'month-cells';
        month_rows.appendChild(month_cells);
        var ul_options = document.createElement('ul');
        ul_options.className = 'month-options';
        ul_options.style.height = '99%';
        month_cells.appendChild(ul_options);
        <% months = []
            (7..12).each {|m| months << [Date::MONTHNAMES[m], m]} %>
        <% (months).each do |string,num| %>
        var li_options = document.createElement('li');
        li_options.className = 'cell-table';
        li_options.setAttribute('onclick','assignMonth(this)');
        li_options.setAttribute('id','<%= num %>');
        li_options.innerHTML = '<%= string %>';
        ul_options.appendChild(li_options);
        <% end %>
        //===========================================
        var table_cell = document.createElement('div');
        table_cell.className = 'table-cell';
        table_cell.style.width = '35%';
        table_cell.style.verticalAlign = 'top';
        table_cell.style.textAlign = 'center';
        table_row.appendChild(table_cell);
        // append day
        var label = document.createElement('label');
        label.innerHTML = 'Enter Day';
        table_cell.appendChild(label);
        var day_input_field = document.createElement('input');
        day_input_field.setAttribute('id','tbInputDay');
        day_input_field.setAttribute('type','text');
        day_input_field.setAttribute('value', "<%= @current_lmp_day %>");
        day_input_field.setAttribute('maxlength','2');
        table_cell.appendChild(day_input_field);
        var day_div = document.createElement('div');
        day_div.setAttribute('id','day');
        day_div.className = 'virtual-keypad';
        table_cell.appendChild(day_div);
        for(var j = 1; j <= 9; j++){
            var btn_id = 'btn'+j;
            btn = document.createElement('input');
            btn.setAttribute('id',btn);
            btn.setAttribute('type','button');
            btn.setAttribute('onclick','inputDay(this);');
            btn.setAttribute('value',j);
            btn.className = 'btn-day';
            day_div.appendChild(btn);
            if ( j%3 == 0 ) {
                var line_break = document.createElement('br');
                day_div.appendChild(line_break);
            }
        }
        var btnUnknown = document.createElement('input');
        btnUnknown.setAttribute('id','btnUnknow');
        btnUnknown.setAttribute('type','button');
        btnUnknown.setAttribute('value','Unknown');
        btnUnknown.style.fontSize = '1.4em';
        btnUnknown.setAttribute('onclick','inputDay(this);');
        btnUnknown.className = 'btn-day';
        day_div.appendChild(btnUnknown);
        var btn0 = document.createElement('input');
        btn0.setAttribute('id','btn0');
        btn0.setAttribute('type','button');
        btn0.style.fontSize = '1.4em';
        btn0.setAttribute('onclick','inputDay(this);');
        btn0.setAttribute('value','0');
        btn0.className = 'btn-day';
        day_div.appendChild(btn0);
        var clear_btn = document.createElement('input');
        clear_btn.setAttribute('id','btnCl');
        clear_btn.setAttribute('type','button');
        clear_btn.style.fontSize = '1.4em';
        clear_btn.setAttribute('value','Clear');
        clear_btn.setAttribute('onclick','clearInputDay();');
        clear_btn.className = 'btn-day';
        day_div.appendChild(clear_btn);
        input_frame.innerHTML = '<div id="date_layout">' + date_layout.innerHTML + '</div>' ;
    }

    function assignMonth(e) {
        allCells = document.getElementsByClassName('cell-table');
        for(var i = 0; i < allCells.length; i++){
            allCells[i].setAttribute('style',"background-color:''");
        }
        e.setAttribute('style',"background-color:lightblue;");
        document.getElementById('tbInputMonth').value = e.innerHTML;
    }

    function validate_edd() {
        var year = document.getElementById('selected_year').value;
        var month = document.getElementById('selected_month').value;
        var day = document.getElementById('selected_day').value;

        if (day == 'Unknown') {
            day = 1;
        }

        var months = [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
        ];
        var current_year = new Date().getFullYear();
        var current_month = new Date().getMonth();
        var year_diff = parseInt(current_year) - parseInt(year);

        if((year > current_year || year == current_year) && parseInt(year) < parseInt(current_year)+2) {
            if( month == nil) {
                showMessage('Month is blank');
            }
            summary(year,month,day,current_month,current_year,months);
        }
        else if(year < current_year) {
            showMessage('Invalid input. EDD year can not be behind '+current_year);
        }
        else if(parseInt(year) > parseInt(current_year)+2) {
            showMessage('Invalid input. EDD year is far ahead of possible due date.');
        }
        else {
            showMessage('Invalid input.');
        }
    }

    function validate_lmp() {
        if(get_edd == true) {
            validate_edd();
        }
        var year = document.getElementById('selected_year').value;
        var month = document.getElementById('selected_month').value;
        var day = document.getElementById('selected_day').value;

        if (day == 'Unknown') {
            day = 1;
        }

        var months = [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
        ];
        var current_year = new Date().getFullYear();
        var current_month = new Date().getMonth();
        var year_diff = parseInt(current_year) - parseInt(year);

        if(year < current_year && year_diff >= 0 && year_diff <= 1 && year != 'Unknown'){
            // We expect month to be of index greater than current and plus 4 ---
            if(parseInt(months.indexOf(month)) >= parseInt(current_month)) {
                if( day > 31 || ( day>=29 && (month == 'February') && (parseInt(year)%4 == 0)) ){
                    showMessage('Invalid input of day.',false,false);
                }
                else if(month == '') {
                    showMessage('Invalid input. Month can not be blank.',false, false);
                }
                else if( day == '') {
                    showMessage('Ask client if it was early, middle or late '+month,false,false);
                }
                else {
                    summary(year,month,day,current_month,current_year,months);
                }
            }
            else{
                showMessage('Invalid input. Entry should be within 12 months.',false,false);
            }
        }
        else if(year == current_year && year != 'Unknown'){
            // We expect month to be of index less than current ---
            if( get_edd != true ){
                if(parseInt(months.indexOf(month)) <= parseInt(current_month)) {
                    if( day > 31 || ( day>=29 && (month == 'February') && (parseInt(year)%4 == 0)) ){
                        showMessage('Invalid input of day.',false,false);
                    }
                    else if(month == '') {
                        showMessage('Invalid input. Month can not be blank.',false, false);
                    }
                    else if( day == '') {
                        showMessage('Ask client if it was early, middle or late '+month,false,false);
                    }
                    else {
                        summary(year,month,day,current_month,current_year,months);
                    }
                }
                else {
                    showMessage('Invalid input. Month can not be ahead of '+months[current_month],false,false);
                }
            }
        }
        else if(year > current_year && year != 'Unknown') {
            if( get_edd != true ) {
                showMessage('Invalid input. Year can not be ahead of ' + current_year, false, false);
            }
        }
        else if( year == 'Unknown' || day == 'Unknown') {
            // Code to enter edd should come here and date unknown should be removed.
            // showMessage('LMP Year unknown.',false,false);
        }
        else {
            showMessage('Invalid input. Entry should be within 12 months.',false,false);
        }
    }

    // note: month is 0 based, just like Dates in js
    // code to get weeks of a month given month and in year.
    function getWeeksInMonth(month, year){
        var weeks=[],
                firstDate=new Date(year, month, 1),
                lastDate=new Date(year, month+1, 0),
                numDays= lastDate.getDate();

        var start=1;
        var end=7-firstDate.getDay();
        while(start<=numDays){
            weeks.push({start:start,end:end});
            start = end + 1;
            end = end + 7;
            if(end>numDays)
                end=numDays;
        }
        return weeks;
    }

    function summary(year,month,day,current_month,current_year,months) {
        var pregnancy_status = document.getElementById('pregnancy_status').value;
        var display = "<div><span class='title'>Pregnancy status:</span><span class='data'> " + pregnancy_status + "</span></div>";
        // Client Pregnant ------------
        if (pregnancy_status == 'Pregnant') {
            var edd_month;
            var expected_edd_month;
            var expected_date_of_delivery;
            var expected_year;
            var expected_month;
            var expected_day;
            switch(month) {
                case 'January':
                    edd_month = 0;
                    break;
                case 'February':
                    edd_month = 1;
                    break;
                case 'March':
                    edd_month = 2;
                    break;
                case 'April':
                    edd_month = 3;
                    break;
                case 'May':
                    edd_month = 4;
                    break;
                case 'June':
                    edd_month = 5;
                    break;
                case 'July':
                    edd_month = 6;
                    break;
                case 'August':
                    edd_month = 7;
                    break;
                case 'September':
                    edd_month = 8;
                    break;
                case 'October':
                    edd_month = 9;
                    break;
                case 'November':
                    edd_month = 10;
                    break;
                case 'December':
                    edd_month = 11;
                    break;
            }

            if( get_edd == true ) {
                // Load edd_data
                expected_year = year;
                expected_edd_month = month;
                expected_day = day;

                expected_date_of_delivery = new Date(expected_year, edd_month, expected_day);
                // Calculate LMP
                var lmp_day = parseInt(expected_day);
                lmp_day -= 280;
                var last_menstrual_period = new Date(expected_year,edd_month,lmp_day);
                var lmp_year = last_menstrual_period.getFullYear();
                var lmp_month = last_menstrual_period.getMonth();
                var lmp_day = last_menstrual_period.getDate();

            }
            else {
                var edd_day = parseInt(day);
                edd_day += 280;
                expected_date_of_delivery = new Date(year, edd_month, edd_day);
                expected_year = expected_date_of_delivery.getFullYear();
                expected_month = expected_date_of_delivery.getMonth();
                expected_day = expected_date_of_delivery.getDate();
                switch(expected_month) {
                    case 0:
                        expected_edd_month = 'January';
                        break;
                    case 1:
                        expected_edd_month = 'February';
                        break;
                    case 2:
                        expected_edd_month = 'March';
                        break;
                    case 3:
                        expected_edd_month = 'April';
                        break;
                    case 4:
                        expected_edd_month = 'May';
                        break;
                    case 5:
                        expected_edd_month = 'June';
                        break;
                    case 6:
                        expected_edd_month = 'July';
                        break;
                    case 7:
                        expected_edd_month = 'August';
                        break;
                    case 8:
                        expected_edd_month = 'September';
                        break;
                    case 9:
                        expected_edd_month = 'October';
                        break;
                    case 10:
                        expected_edd_month = 'November';
                        break;
                    case 11:
                        expected_edd_month = 'December';
                        break;
                }
                var last_menstrual_period = new Date(year, edd_month, day);
                var lmp_year = last_menstrual_period.getFullYear();
                var lmp_month = last_menstrual_period.getMonth();
                var lmp_day = last_menstrual_period.getDate();

                // ------------------------------------
            }
            var trimester_lmp_month = lmp_month;
            switch(lmp_month) {
                case 0:
                    lmp_month = 'January';
                    break;
                case 1:
                    lmp_month = 'February';
                    break;
                case 2:
                    lmp_month = 'March';
                    break;
                case 3:
                    lmp_month = 'April';
                    break;
                case 4:
                    lmp_month = 'May';
                    break;
                case 5:
                    lmp_month = 'June';
                    break;
                case 6:
                    lmp_month = 'July';
                    break;
                case 7:
                    lmp_month = 'August';
                    break;
                case 8:
                    lmp_month = 'September';
                    break;
                case 9:
                    lmp_month = 'October';
                    break;
                case 10:
                    lmp_month = 'November';
                    break;
                case 11:
                    lmp_month = 'December';
                    break;
            }
            //var trimester = Math.abs(parseInt(trimester_lmp_month) - parseInt(current_month));
            var trimester;

            if( get_edd == true ) {
                if(parseInt(current_year) == parseInt(lmp_year)) {
                    if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 2)) {
                        trimester = 1 + 'st';
                    }
                    else if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 5)) {
                        trimester = 2 + 'nd';
                    }
                    else if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 7)) {
                        trimester = 3 + 'rd';
                    }
                }
                else if(parseInt(current_year) < parseInt(lmp_year)) {
                    var trimester_array = new Array();
                    var i;
                    for(i = trimester_lmp_month+1; i <= months.length -1; i++) {
                        trimester_array.push(months[i]);
                    }
                    for(i = 0; i <= expected_month ; i++ ) {
                        trimester_array.push(months[i]);
                    }
                    for(i = 0; i <= trimester_array.length-1; i++) {
                        if( months[current_month] == trimester_array[i]) {
                            if(i >= 0 && i <= 2){
                                trimester = '1st';
                            }
                            else if(i >= 3 && i <= 5){
                                trimester = '2nd';
                            }
                            else if(i >= 6 && i <= 8){
                                trimester = '3rd';
                            }
                        }
                    }
                }
            }
            else    {
                if(parseInt(current_year) == parseInt(lmp_year)) {
                    if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 2)) {
                        trimester = 1 + 'st';
                    }
                    else if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 5)) {
                        trimester = 2 + 'nd';
                    }
                    else if (current_month >= trimester_lmp_month && current_month <= (trimester_lmp_month + 8)) {
                        trimester = 3 + 'rd';
                    }
                }
                else if(parseInt(current_year) > parseInt(lmp_year)) {
                    var trimester_array = new Array();
                    var i;
                    for(i = trimester_lmp_month+1; i <= months.length -1; i++) {
                        trimester_array.push(months[i]);
                    }
                    for(i = 0; i <= expected_month ; i++ ) {
                        trimester_array.push(months[i]);
                    }
                    for(i = 0; i <= trimester_array.length-1; i++) {
                        if( months[current_month] == trimester_array[i]) {
                            if(i >= 0 && i <= 2){
                                trimester = '1st';
                            }
                            else if(i >= 3 && i <= 5){
                                trimester = '2nd';
                            }
                            else if(i >= 6 && i <= 8){
                                trimester = '3rd';
                            }
                        }
                    }
                }
                if(trimester == undefined ) {
                    trimester = 'Outlier';
                }
            }

            display += "<div><span class='title'>Last menstrual period (LMP):</span><span class='data'> " + lmp_day + " " + lmp_month + " " + lmp_year +"</span></div>";
            display += "<div><span class='title'>Estimated due date (EDD):</span><span class='data'> " + expected_day + " " + expected_edd_month + " "+ expected_year +"</span></div>";
            display += "<div><span class='title'>Trimester:</span><span class='data'> " + trimester +"</span></div>";
            document.getElementById('last_menstrual_period').value = last_menstrual_period;
            document.getElementById('expected_due_date').value = expected_date_of_delivery;
        }
        // Client Delivered ------------
        else if (pregnancy_status == 'Delivered') {
            display += "<div><span class='title'>Delivery Date:</span><span class='data'> " + day + " " + month + " "+ year +"</span></div>";
            switch(month) {
                case 'January':
                    month = 0;
                    break;
                case 'February':
                    month = 1;
                    break;
                case 'March':
                    month = 2;
                    break;
                case 'April':
                    month = 3;
                    break;
                case 'May':
                    month = 4;
                    break;
                case 'June':
                    month = 5;
                    break;
                case 'July':
                    month = 6;
                    break;
                case 'August':
                    month = 7;
                    break;
                case 'September':
                    month = 8;
                    break;
                case 'October':
                    month = 9;
                    break;
                case 'November':
                    month = 10;
                    break;
                case 'December':
                    month = 11;
                    break;
            }
            var delivery_date = new Date(year, month, day);
            document.getElementById('delivery_date').value = delivery_date;
        }
        // Client Not Pregnant or Miscarried ------
        else {
            display += "<div><span class='title'>Date:</span><span class='data'> " + day + " " + month + " "+ year +"</span></div>";
        }
        $('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;
        $("clearButton").style.display = "none";
        $('helpText'+tstCurrentPage).innerHTML = 'Summary';
        var finish = document.getElementById('nextButton');
        finish.setAttribute('onmousedown','validateBirthdate();');
    }

    function validateBirthdate() {
        // submit form -------------------------
        document.getElementById('pregnancy-status').submit();
    }

</script>