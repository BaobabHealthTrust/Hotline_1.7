<style>
    .nonclinic {
        background-color: #C0C0C0 ! important;
    }
    .selected {
        background-color: #99EE99 ! important;
        color: #000000;
        font-weight:bold;
    }
    .publicholiday {
        background-color: #CD3333 ! important;
    }
    div {
        -moz-user-select: none;
    }
      .message{
        font-size:20px;
        color:white;
        font-weight:bold;
    }

    .cTable {
        height: 78%;
        width: 97%;
    }

    .cRow {
        line-height: 30px;
    }

</style>

<script src="/javascripts/jquery-1.3.2.min.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript" src="/javascripts/jquery.flot.js"></script>
<script src="/javascripts/touchscreenYesNo.js" type="text/javascript"></script>
<script type="text/javascript">

    var patient_id = <%= @patient.id %>;
    var globalDate
    selected_date = new Date();
    var clinic_holidays =[]
    var totalWeekend = new Array;
    var totalHoliday = new Array;
    var tt_cancel_destination = "/patient/dashboard/<%= @patient.id%>/tasks"
    function summary() {
        //updateWhoStage();
        //updateReasonForArtEligibility();
        //var conditions = selectedConditions();
        var display = "<div><span class='title'></span></div>";

        //$('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;
        $("clearButton").style.display = 'none';
        $("cancelButton").style.display = 'none';

        $("observations__value_datetime").value = "";
    }

    var date_set = [];

    for(var c = 0; c < clinic_holidays.length; c++) {
        date_set.push(clinic_holidays[c]);
    }

    function showSelectedDates() {
        activeCells = document.getElementsByClassName('cellActive');
        for(var i = 0; i < activeCells.length; i++) {
            weekDay = activeCells[i].getAttribute('date');
            param = activeCells[i];
            nn = new Date(weekDay).getDay();
            var days = '';
            days = days.split(',');
            if (days[nn] == ""){

                activeCells[i].setAttribute("ajaxCalendarUrl", "/patient/number_of_booked_patients?date=" + weekDay);
                activeCells[i].className += " nonclinic";
                activeCells[i].setAttribute('onclick', "showConfirm('Non-clinic day', this);");

                totalWeekend.push(activeCells[i])

            }
            else{
                activeCells[i].setAttribute("ajaxCalendarUrl", "/patient/number_of_booked_patients?date=" + weekDay)
                activeCells[i].setAttribute('onclick', "showConfirm('none', this);");

                for(var x = 0 ; x < clinic_holidays.length; x++){
                    if (weekDay == clinic_holidays[x]) {
                        activeCells[i].className += " publicholiday";
                        activeCells[i].setAttribute('onclick', "showConfirm('Public Holiday', this);");
                        totalHoliday.push(activeCells[i])
                    }

                }

            }
        }
    }

    function setAttributes() {
        buttons = document.getElementsByClassName('btn');
        for(var i = 0; i < buttons.length; i++) {
            new_attr = buttons[i].getAttribute('onclick') + ';showSelectedDates();'
            buttons[i].setAttribute('onclick',new_attr);
        }
    }
    var attt;
    var result;
    function showConfirm(attt, field){
        globalDate = field
        getTotal();
        activeCells = document.getElementsByClassName('cellActive');
        if (attt == "none"){

            for(var i = 0; i < activeCells.length; i++) {
                activeCells[i].style.backgroundColor = "white"
                if (totalWeekend.indexOf(activeCells[i]) > -1){
                    activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' nonclinic' );
                }
                else if (totalHoliday.indexOf(activeCells[i]) > -1){
                    activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' publicholiday' );
                }
                else if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
                    field.className = field.className.replace( /(?:^|\s)selected(?!\S)/g , ' ' );
                    field.className +=  ' selected';
                }
                else{
                    activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , '' );
                }
            }
        }

        else {
            for(var i = 0; i < activeCells.length; i++) {
                activeCells[i].style.backgroundColor = "white"
                if (totalWeekend.indexOf(activeCells[i]) > -1){
                    if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
                        field.className = field.className.replace( /(?:^|\s)nonclinic(?!\S)/g , ' selected' );
                    }
                    else {
                        activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' nonclinic' );
                    }
                }
                else if (totalHoliday.indexOf(activeCells[i]) > -1){
                    if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
                        field.className = field.className.replace( /(?:^|\s)publicholiday(?!\S)/g , ' selected' );
                    }
                    else {
                        activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' publicholiday' );
                    }
                }
                else{
                    activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , '' );
                }
            }
        }
    }

    function getTotal() {
        var aUrl = "/patient/number_of_booked_patients?date=" + globalDate.getAttribute('date');
        var httpRequest = new XMLHttpRequest();
        httpRequest.onreadystatechange = function() {
            set_total(httpRequest);
        };
        try {
            httpRequest.open('GET', aUrl, true);
            httpRequest.send(null);
        } catch(e){
        }
    }

    function set_total(req) {
        if (req.readyState == 4 && req.status == 200) {
            total = JSON.parse(req.responseText);
            if(globalDate.getElementsByTagName("div").length <= 0){
                var daycount = document.createElement('div');
                daycount.className = "dayCount";
                globalDate.appendChild(daycount);
            }

            globalDate.getElementsByTagName("div")[0].innerHTML = total[globalDate.getAttribute('date')];
            __$('observations__value_datetime').value = globalDate.getAttribute('date');
        }
    }

</script>
    <% session_date = session[:datetime].to_date rescue nil %>
<body>

<form id="frmMain" action="/encounters/create/" >

  <%= hidden_field_tag "encounter[encounter_type]", EncounterType.find_by_name("APPOINTMENT").id %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]",  (session_date || DateTime.now()).to_s(:db)  %>
  <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

  <%= hidden_field_tag("observations[][concept_name]", "Next ANC visit date") %>
  <%= text_field_tag("observations[][value_datetime]", ((session_date || Date.today) + 1.month).strftime("%Y-%m-%d"),
                     {
                             :field_type => 'calendar',
                             :tt_onLoad => "setAttributes();showSelectedDates();showCategory('Next Appointment'); ",
                             :minDate => "#{ ((session[:datetime] ? session[:datetime].to_date : Date.today) + 6.month).strftime("%Y-%m-%d") }",
                             :ajaxCalendarUrl => "/patient/number_of_booked_patients?date=",
                             :tt_BeforeUnLoad => "__$('observations__value_datetime').value = hideInfo();"
                     }) %>

</form>
</body>