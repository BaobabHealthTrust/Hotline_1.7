<script type="text/javascript" type="text/javascript" src="/assets/jquery.js"></script>
<script type="text/javascript" type="text/javascript" src="/assets/top-icon.js"></script>

<script type="text/javascript">
    var tt_cancel_destination = "/patient/dashboard/<%= @patient_obj.patient_id %>/tasks";

    var currentKey = ""
  //var currentConcept = "Potential chest indrawing";
  var currentConcept = "";
  function loadArticles(){

    jQuery.ajax({
      type: "POST",
      url: "/home/retrieve_articles",
      data: "concept=" + currentConcept,
      success: function(results){
        results = eval("(" + results  + ")");
        currentKey = results["key"];
        title = results["data"]["title"];
        body = results["data"]["body"];
        author = results["data"]["author"];

        popupHeader = document.getElementsByClassName("popup-header")[0];
        popupHeader.innerHTML = title;
        popupContent = document.getElementsByClassName("popup-data")[0];
        popupContent.innerHTML = body;
        console.log(results);
     }

    });
  }

function loadNextArticle(){
    jQuery.ajax({
      type: "POST",
      url: "/home/next_article",
      data: "key=" + currentKey,
      success: function(results){
        results = eval("(" + results  + ")");
        currentKey = results["key"];
        title = results["data"]["title"];
        body = results["data"]["body"];
        author = results["data"]["author"];
        disabled = (results["disabled"]);
        console.log(disabled == true);
        nextButton = document.getElementsByClassName("nextButton")[0];
        prevButton = document.getElementsByClassName("prevButton")[0];
        if (disabled == true){
          nextButton.style.backgroundColor = 'gray';
          prevButton.style.backgroundColor = '#6495ED';
        }else{
          nextButton.style.backgroundColor = '#6495ED';
          prevButton.style.backgroundColor = '#6495ED';
        }
        popupHeader = document.getElementsByClassName("popup-header")[0];
        popupHeader.innerHTML = title;
        popupContent = document.getElementsByClassName("popup-data")[0];
        popupContent.innerHTML = body;
      }

    });
}

function loadPrevArticle(){

  jQuery.ajax({
      type: "POST",
      url: "/home/previous_article",
      data: "key=" + currentKey,
      success: function(results){
        results = eval("(" + results  + ")");
        currentKey = results["key"];
        title = results["data"]["title"];
        body = results["data"]["body"];
        author = results["data"]["author"];
        disabled = (results["disabled"]);
        prevButton = document.getElementsByClassName("prevButton")[0];
        nextButton = document.getElementsByClassName("nextButton")[0];
        if (disabled == true){
          prevButton.style.backgroundColor = 'gray';
          nextButton.style.backgroundColor = '#6495ED';
        }else{
          prevButton.style.backgroundColor = '#6495ED';
          nextButton.style.backgroundColor = '#6495ED';
        }

        popupHeader = document.getElementsByClassName("popup-header")[0];
        popupHeader.innerHTML = title;
        popupContent = document.getElementsByClassName("popup-data")[0];
        popupContent.innerHTML = body;
      }

    });
}

function setListAttributes(){
    liElements = document.getElementsByTagName("li");
    for (i=0; i <= liElements.length - 1; i++){
      liElements[i].onmouseup = function(){
        currentConcept = this.getAttribute("tstvalue");
      }
    }
}
var selected_primary_outcomes;
function selectedOutcomes() {
        selected_primary_outcomes = __$('touchscreenInput' + tstCurrentPage).value;

    }

function hideselectedOutcomes(){
      primaryOutcomes = selected_primary_outcomes.split(";"); 
      liElements = document.getElementsByTagName("li");
      for (var i = 0; i<= primaryOutcomes.length - 1; i++){
        primary_outcome = primaryOutcomes[i];
        for (var j=0; j<=liElements.length -1; j++){
          li_tst_value = liElements[j].getAttribute('tstvalue');
          if (primary_outcome.trim().toUpperCase() == li_tst_value.trim().toUpperCase()){
            liElements[j].style.display = 'none';
            break;
          }
        }
      }
    }


    function notify_reason() {
        <% if params[:end_call] == 'true' %>
            showMessage('This call is missing outcome of call. Please record outcome of call.', false, false);
        <% end %>
    }
</script>

<style>
    #num{
        display: none;
    }
</style>

<body onLoad="notify_reason()">
    <%= form_tag("/encounters/create", id: "pregnancy-status", method: 'post', enctype: 'multipart/form-data') do %>
        <%= hidden_field_tag "encounter[encounter_type]", EncounterType.find_by_name("Update Outcome").id %>
        <%= hidden_field_tag "encounter[patient_id]", @patient_obj.patient_id %>
        <%= hidden_field_tag "encounter[encounter_datetime]", (session_date || DateTime.now()).to_s(:db) %>
        <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

        <%= hidden_field_tag("observations[][concept_name]", "General Outcome") %>
        <%= select_tag "observations[][value_coded_or_text]", options_for_select(@general_outcomes),
                       :helpText =>"Select Primary Outcome",
                       :tt_onLoad => "showHelpButton();setListAttributes();__$('keyboard').style.display='none';",
                       :tt_onUnLoad => "hideHelpButton();__$('keyboard').style.display='none';selectedOutcomes();",
                       :tt_pageStyleClass => 'longSelectList',
                       :id => "general_outcome"
        %>

        <%= hidden_field_tag("observations[][concept_name]", "Health facility name") %>
        <%= select_tag "observations[][value_text]", nil,
                           {:id => 'health_centre_name',
                            :field_type => 'alpha',
                            :condition => "__$('general_outcome').value.trim() == 'Hospital'  ||
                                __$('general_outcome').value.trim() == 'Referred to a health centre' ",
                            :helpText => 'Select health centre name',
                            :ajaxURL => '/home/health_facilities?search_string=',
                            :allowFreeText => true }%>

        <%= hidden_field_tag("observations[][concept_name]", "General Outcome") %>
        <%= select_tag "observations[][value_coded_or_text]", options_for_select(@general_outcomes , nil),
                       :helpText =>"Secondary outcome if any",
                       :id => "secondary_outcome",
                       :multiple => true,
                       :tt_onLoad => "hideselectedOutcomes();",
                       :tt_pageStyleClass => 'longSelectList',
                       :allowFreeText => false
        %>

    <% end %>
</body>
